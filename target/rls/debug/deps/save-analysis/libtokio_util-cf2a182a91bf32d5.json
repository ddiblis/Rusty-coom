{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9","program":"/home/iblis/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"io\"","-C","metadata=cf2a182a91bf32d5","-C","extra-filename=-cf2a182a91bf32d5","--out-dir","/home/iblis/src/rust/rustripper/target/rls/debug/deps","-L","dependency=/home/iblis/src/rust/rustripper/target/rls/debug/deps","--extern","bytes=/home/iblis/src/rust/rustripper/target/rls/debug/deps/libbytes-6f84e9e509e40b5c.rmeta","--extern","futures_core=/home/iblis/src/rust/rustripper/target/rls/debug/deps/libfutures_core-21b87795bedc2ce1.rmeta","--extern","futures_sink=/home/iblis/src/rust/rustripper/target/rls/debug/deps/libfutures_sink-af86ac4996ed3582.rmeta","--extern","log=/home/iblis/src/rust/rustripper/target/rls/debug/deps/liblog-c78037e96bf7a644.rmeta","--extern","pin_project_lite=/home/iblis/src/rust/rustripper/target/rls/debug/deps/libpin_project_lite-0aaba19a77115d16.rmeta","--extern","tokio=/home/iblis/src/rust/rustripper/target/rls/debug/deps/libtokio-08a939cb700ec24e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/iblis/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/iblis/src/rust/rustripper/target/rls/debug/deps/libtokio_util-cf2a182a91bf32d5.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[4642117878224856300,0]},"crate_root":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src","external_crates":[{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":20,"id":{"name":"futures_core","disambiguator":[7514634387606231486,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":21,"id":{"name":"futures_sink","disambiguator":[3053213730400575595,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":22,"id":{"name":"tokio","disambiguator":[156147454252178298,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":23,"id":{"name":"parking_lot","disambiguator":[4439584096583976761,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":24,"id":{"name":"instant","disambiguator":[17081669115862444966,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":25,"id":{"name":"cfg_if","disambiguator":[11900951980957517807,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":26,"id":{"name":"lock_api","disambiguator":[12682360784623646209,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":27,"id":{"name":"scopeguard","disambiguator":[7389675204133512052,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":28,"id":{"name":"parking_lot_core","disambiguator":[3233181850913878725,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":29,"id":{"name":"smallvec","disambiguator":[1603597397311112112,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":30,"id":{"name":"libc","disambiguator":[4939918902751890021,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","num":31,"id":{"name":"pin_project_lite","disambiguator":[3650398032983682914,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":32,"id":{"name":"mio","disambiguator":[2328091442476404014,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","num":33,"id":{"name":"log","disambiguator":[16138615073828880648,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":34,"id":{"name":"bytes","disambiguator":[6191440968204973069,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":35,"id":{"name":"once_cell","disambiguator":[1725345041460281935,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":36,"id":{"name":"tokio_macros","disambiguator":[9872204552011724107,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":37,"id":{"name":"memchr","disambiguator":[11363686017877364425,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":38,"id":{"name":"num_cpus","disambiguator":[9558854204768697237,0]}},{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":39,"id":{"name":"signal_hook_registry","disambiguator":[15406112251153177406,0]}}],"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1192},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112679,"byte_end":15112689,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":562},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112728,"byte_end":15112735,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":579},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112774,"byte_end":15112781,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1761},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112943,"byte_end":15112949,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1228},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112951,"byte_end":15112962,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1720},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15113010,"byte_end":15113020,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1679},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15113069,"byte_end":15113080,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1252},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15113142,"byte_end":15113162,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1009},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15113164,"byte_end":15113189,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1270},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15113238,"byte_end":15113248,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1292},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15113250,"byte_end":15113265,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1300},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15113330,"byte_end":15113347,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1324},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15113349,"byte_end":15113371,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1356},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15208110,"byte_end":15208118,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"alias_span":null,"name":"read_buf","value":"","parent":{"krate":0,"index":1332}},{"kind":"Use","ref_id":{"krate":0,"index":1640},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15208149,"byte_end":15208161,"line_start":22,"line_end":22,"column_start":30,"column_end":42},"alias_span":null,"name":"ReaderStream","value":"","parent":{"krate":0,"index":1332}},{"kind":"Use","ref_id":{"krate":0,"index":1593},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15208192,"byte_end":15208204,"line_start":23,"line_end":23,"column_start":30,"column_end":42},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":1332}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15208228,"byte_end":15208241,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"alias_span":null,"name":"poll_read_buf","value":"","parent":{"krate":0,"index":1332}},{"kind":"Use","ref_id":{"krate":0,"index":506},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15208243,"byte_end":15208257,"line_start":24,"line_end":24,"column_start":38,"column_end":52},"alias_span":null,"name":"poll_write_buf","value":"","parent":{"krate":0,"index":1332}},{"kind":"Use","ref_id":{"krate":0,"index":1486},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":6970,"byte_end":6979,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":6981,"byte_end":6998,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7000,"byte_end":7025,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1561},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7088,"byte_end":7098,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7145,"byte_end":7158,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7201,"byte_end":7218,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":512},{"krate":0,"index":1332},{"krate":0,"index":14},{"krate":0,"index":393},{"krate":0,"index":462}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":365,"byte_end":402,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":403,"byte_end":406,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":407,"byte_end":464,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":465,"byte_end":529,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":530,"byte_end":605,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":606,"byte_end":609,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":610,"byte_end":646,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":512},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1189}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/cfg.rs","byte_start":5454,"byte_end":5479,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15102407,"byte_end":15102460,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15102461,"byte_end":15102464,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15102465,"byte_end":15102540,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15102541,"byte_end":15102606,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15102607,"byte_end":15102610,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15102611,"byte_end":15102691,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15102692,"byte_end":15102767,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15102768,"byte_end":15102816,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15102817,"byte_end":15102820,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15102821,"byte_end":15102844,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15102845,"byte_end":15102848,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15102849,"byte_end":15102928,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15102929,"byte_end":15103008,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103009,"byte_end":15103080,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103081,"byte_end":15103151,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103152,"byte_end":15103230,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103231,"byte_end":15103307,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103308,"byte_end":15103341,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103342,"byte_end":15103345,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103346,"byte_end":15103426,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103427,"byte_end":15103507,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103508,"byte_end":15103558,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103559,"byte_end":15103562,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103563,"byte_end":15103614,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103615,"byte_end":15103664,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103665,"byte_end":15103716,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103717,"byte_end":15103720,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103721,"byte_end":15103786,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103787,"byte_end":15103790,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103791,"byte_end":15103868,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103869,"byte_end":15103910,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103911,"byte_end":15103914,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103915,"byte_end":15103995,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15103996,"byte_end":15104075,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15104076,"byte_end":15104154,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15104155,"byte_end":15104234,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15104235,"byte_end":15104249,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15104250,"byte_end":15104253,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15104254,"byte_end":15104333,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15104334,"byte_end":15104413,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15104414,"byte_end":15104431,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15104432,"byte_end":15104435,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15104436,"byte_end":15104513,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15104514,"byte_end":15104593,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15104594,"byte_end":15104671,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15104672,"byte_end":15104742,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15104743,"byte_end":15104792,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15104793,"byte_end":15104796,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15104797,"byte_end":15104810,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15104811,"byte_end":15104843,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15104844,"byte_end":15104911,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15104912,"byte_end":15105026,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105027,"byte_end":15105064,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105065,"byte_end":15105126,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105127,"byte_end":15105176,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105177,"byte_end":15105180,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105181,"byte_end":15105222,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105223,"byte_end":15105233,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105234,"byte_end":15105318,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105319,"byte_end":15105375,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105376,"byte_end":15105379,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105380,"byte_end":15105401,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105402,"byte_end":15105469,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105470,"byte_end":15105498,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105499,"byte_end":15105512,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105513,"byte_end":15105531,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105532,"byte_end":15105541,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105542,"byte_end":15105545,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105546,"byte_end":15105605,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105606,"byte_end":15105630,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105631,"byte_end":15105640,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105641,"byte_end":15105646,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105647,"byte_end":15105655,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105656,"byte_end":15105663,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105664,"byte_end":15105738,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105739,"byte_end":15105742,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105743,"byte_end":15105765,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105766,"byte_end":15105769,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105770,"byte_end":15105847,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105848,"byte_end":15105924,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15105925,"byte_end":15106004,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106005,"byte_end":15106059,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106060,"byte_end":15106063,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106064,"byte_end":15106108,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106109,"byte_end":15106116,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106117,"byte_end":15106152,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106153,"byte_end":15106184,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106185,"byte_end":15106188,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106189,"byte_end":15106218,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106219,"byte_end":15106222,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106223,"byte_end":15106262,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106263,"byte_end":15106266,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106267,"byte_end":15106305,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106306,"byte_end":15106333,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106334,"byte_end":15106370,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106371,"byte_end":15106374,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106375,"byte_end":15106393,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106394,"byte_end":15106416,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106417,"byte_end":15106447,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106448,"byte_end":15106502,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106503,"byte_end":15106533,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106534,"byte_end":15106591,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106592,"byte_end":15106624,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106625,"byte_end":15106638,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106639,"byte_end":15106642,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106643,"byte_end":15106677,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106678,"byte_end":15106722,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106723,"byte_end":15106775,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106776,"byte_end":15106843,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106844,"byte_end":15106847,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106848,"byte_end":15106922,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106923,"byte_end":15106989,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15106990,"byte_end":15107019,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107020,"byte_end":15107067,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107068,"byte_end":15107120,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107121,"byte_end":15107192,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107193,"byte_end":15107212,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107213,"byte_end":15107226,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107227,"byte_end":15107230,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107231,"byte_end":15107270,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107271,"byte_end":15107326,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107327,"byte_end":15107345,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107346,"byte_end":15107422,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107423,"byte_end":15107489,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107490,"byte_end":15107542,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107543,"byte_end":15107546,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107547,"byte_end":15107627,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107628,"byte_end":15107653,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107654,"byte_end":15107686,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107687,"byte_end":15107700,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107701,"byte_end":15107704,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107705,"byte_end":15107777,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107778,"byte_end":15107804,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107805,"byte_end":15107856,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107857,"byte_end":15107893,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107894,"byte_end":15107897,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107898,"byte_end":15107976,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15107977,"byte_end":15108020,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108021,"byte_end":15108068,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108069,"byte_end":15108105,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108106,"byte_end":15108150,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108151,"byte_end":15108207,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108208,"byte_end":15108256,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108257,"byte_end":15108279,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108280,"byte_end":15108298,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108299,"byte_end":15108312,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108313,"byte_end":15108322,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108323,"byte_end":15108328,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108329,"byte_end":15108336,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108337,"byte_end":15108340,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108341,"byte_end":15108364,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108365,"byte_end":15108368,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108369,"byte_end":15108447,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108448,"byte_end":15108521,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108522,"byte_end":15108598,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108599,"byte_end":15108679,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108680,"byte_end":15108696,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108697,"byte_end":15108700,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108701,"byte_end":15108781,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108782,"byte_end":15108861,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108862,"byte_end":15108942,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15108943,"byte_end":15109015,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109016,"byte_end":15109019,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109020,"byte_end":15109097,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109098,"byte_end":15109176,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109177,"byte_end":15109250,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109251,"byte_end":15109317,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109318,"byte_end":15109321,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109322,"byte_end":15109335,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109336,"byte_end":15109369,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109370,"byte_end":15109404,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109405,"byte_end":15109442,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109443,"byte_end":15109510,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109511,"byte_end":15109546,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109547,"byte_end":15109608,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109609,"byte_end":15109655,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109656,"byte_end":15109717,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109718,"byte_end":15109721,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109722,"byte_end":15109750,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109751,"byte_end":15109754,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109755,"byte_end":15109796,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109797,"byte_end":15109807,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109808,"byte_end":15109832,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109833,"byte_end":15109907,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109908,"byte_end":15109950,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109951,"byte_end":15109965,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15109966,"byte_end":15110023,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110024,"byte_end":15110073,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110074,"byte_end":15110088,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110089,"byte_end":15110126,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110127,"byte_end":15110178,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110179,"byte_end":15110225,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110226,"byte_end":15110256,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110257,"byte_end":15110271,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110272,"byte_end":15110281,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110282,"byte_end":15110287,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110288,"byte_end":15110295,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110296,"byte_end":15110303,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110304,"byte_end":15110379,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110380,"byte_end":15110453,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110454,"byte_end":15110496,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110497,"byte_end":15110500,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110501,"byte_end":15110523,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110524,"byte_end":15110527,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110528,"byte_end":15110605,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110606,"byte_end":15110682,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110683,"byte_end":15110759,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110760,"byte_end":15110783,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110784,"byte_end":15110787,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110788,"byte_end":15110833,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110834,"byte_end":15110841,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110842,"byte_end":15110877,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110878,"byte_end":15110902,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110903,"byte_end":15110906,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110907,"byte_end":15110936,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110937,"byte_end":15110940,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110941,"byte_end":15110980,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110981,"byte_end":15110984,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15110985,"byte_end":15111031,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111032,"byte_end":15111068,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111069,"byte_end":15111072,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111073,"byte_end":15111164,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111165,"byte_end":15111239,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111240,"byte_end":15111262,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111263,"byte_end":15111296,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111297,"byte_end":15111344,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111345,"byte_end":15111397,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111398,"byte_end":15111473,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111474,"byte_end":15111493,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111494,"byte_end":15111507,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111508,"byte_end":15111511,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111512,"byte_end":15111564,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111565,"byte_end":15111642,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111643,"byte_end":15111707,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111708,"byte_end":15111711,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111712,"byte_end":15111755,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111756,"byte_end":15111796,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111797,"byte_end":15111800,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111801,"byte_end":15111858,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111859,"byte_end":15111905,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111906,"byte_end":15111957,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111958,"byte_end":15111976,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111977,"byte_end":15111986,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111987,"byte_end":15111992,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15111993,"byte_end":15112000,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112001,"byte_end":15112004,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112005,"byte_end":15112044,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112045,"byte_end":15112086,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112087,"byte_end":15112123,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112124,"byte_end":15112156,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112157,"byte_end":15112253,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112254,"byte_end":15112305,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112306,"byte_end":15112359,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112360,"byte_end":15112403,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112404,"byte_end":15112448,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112449,"byte_end":15112497,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112498,"byte_end":15112546,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112547,"byte_end":15112593,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15112594,"byte_end":15112633,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1192},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114657,"byte_end":15114667,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113500,"byte_end":15113585,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113586,"byte_end":15113589,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113590,"byte_end":15113628,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113629,"byte_end":15113667,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113668,"byte_end":15113671,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113672,"byte_end":15113685,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113686,"byte_end":15113689,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113690,"byte_end":15113771,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113772,"byte_end":15113775,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113776,"byte_end":15113815,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113816,"byte_end":15113849,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113850,"byte_end":15113879,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113880,"byte_end":15113883,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113884,"byte_end":15113891,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113892,"byte_end":15113910,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113911,"byte_end":15113941,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113942,"byte_end":15113966,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113967,"byte_end":15113974,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15113975,"byte_end":15114004,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114005,"byte_end":15114057,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114058,"byte_end":15114061,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114062,"byte_end":15114080,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114081,"byte_end":15114098,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114099,"byte_end":15114179,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114180,"byte_end":15114214,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114215,"byte_end":15114268,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114269,"byte_end":15114280,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114281,"byte_end":15114288,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114289,"byte_end":15114294,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114295,"byte_end":15114342,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114343,"byte_end":15114396,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114397,"byte_end":15114455,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114456,"byte_end":15114535,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114536,"byte_end":15114548,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114549,"byte_end":15114556,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114557,"byte_end":15114564,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114565,"byte_end":15114568,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114769,"byte_end":15114772,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114696,"byte_end":15114757,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":562},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116773,"byte_end":15116780,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15115487,"byte_end":15115522,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15115523,"byte_end":15115526,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15115527,"byte_end":15115596,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15115597,"byte_end":15115676,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15115677,"byte_end":15115749,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15115750,"byte_end":15115774,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15115775,"byte_end":15115778,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15115779,"byte_end":15115847,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15115848,"byte_end":15115925,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15115926,"byte_end":15115987,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15115988,"byte_end":15115991,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15115992,"byte_end":15116053,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116054,"byte_end":15116116,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116117,"byte_end":15116120,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116121,"byte_end":15116184,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116185,"byte_end":15116248,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116249,"byte_end":15116328,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116329,"byte_end":15116403,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116404,"byte_end":15116423,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116424,"byte_end":15116427,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116428,"byte_end":15116496,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116497,"byte_end":15116559,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116560,"byte_end":15116635,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116636,"byte_end":15116676,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116677,"byte_end":15116680,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116681,"byte_end":15116717,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116718,"byte_end":15116762,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":563},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116828,"byte_end":15116832,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116787,"byte_end":15116818,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":564},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117598,"byte_end":15117603,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116839,"byte_end":15116891,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116896,"byte_end":15116899,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116904,"byte_end":15116973,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15116978,"byte_end":15117048,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117053,"byte_end":15117099,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117104,"byte_end":15117107,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117112,"byte_end":15117188,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117193,"byte_end":15117268,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117273,"byte_end":15117348,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117353,"byte_end":15117393,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117398,"byte_end":15117401,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117406,"byte_end":15117480,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117485,"byte_end":15117531,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117536,"byte_end":15117539,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117544,"byte_end":15117588,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120539,"byte_end":15120545,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117627,"byte_end":15117692,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117697,"byte_end":15117700,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117705,"byte_end":15117779,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117784,"byte_end":15117856,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117861,"byte_end":15117934,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117939,"byte_end":15117982,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117987,"byte_end":15117990,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15117995,"byte_end":15118068,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15118073,"byte_end":15118136,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15118141,"byte_end":15118216,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15118221,"byte_end":15118296,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15118301,"byte_end":15118324,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15118329,"byte_end":15118332,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15118337,"byte_end":15118409,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15118414,"byte_end":15118488,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15118493,"byte_end":15118563,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15118568,"byte_end":15118571,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15118576,"byte_end":15118644,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15118649,"byte_end":15118720,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15118725,"byte_end":15118805,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15118810,"byte_end":15118822,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15118827,"byte_end":15118830,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15118835,"byte_end":15118905,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15118910,"byte_end":15118985,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15118990,"byte_end":15119027,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119032,"byte_end":15119035,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119040,"byte_end":15119076,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119081,"byte_end":15119125,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119130,"byte_end":15119133,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119138,"byte_end":15119161,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119166,"byte_end":15119169,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119174,"byte_end":15119248,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119253,"byte_end":15119327,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119332,"byte_end":15119385,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119390,"byte_end":15119393,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119398,"byte_end":15119469,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119474,"byte_end":15119544,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119549,"byte_end":15119565,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119570,"byte_end":15119573,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119578,"byte_end":15119591,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119596,"byte_end":15119614,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119619,"byte_end":15119624,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119629,"byte_end":15119655,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119660,"byte_end":15119697,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119702,"byte_end":15119707,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119712,"byte_end":15119733,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119738,"byte_end":15119743,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119748,"byte_end":15119778,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119783,"byte_end":15119797,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119802,"byte_end":15119833,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119838,"byte_end":15119871,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119876,"byte_end":15119879,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119884,"byte_end":15119977,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15119982,"byte_end":15120000,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120005,"byte_end":15120008,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120013,"byte_end":15120085,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120090,"byte_end":15120150,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120155,"byte_end":15120207,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120212,"byte_end":15120274,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120279,"byte_end":15120346,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120351,"byte_end":15120354,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120359,"byte_end":15120387,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120392,"byte_end":15120401,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120406,"byte_end":15120411,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120416,"byte_end":15120423,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120428,"byte_end":15120431,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120436,"byte_end":15120505,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120510,"byte_end":15120531,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15121711,"byte_end":15121721,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120626,"byte_end":15120698,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120703,"byte_end":15120752,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120757,"byte_end":15120760,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120765,"byte_end":15120833,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120838,"byte_end":15120905,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120910,"byte_end":15120978,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15120983,"byte_end":15121059,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15121064,"byte_end":15121130,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15121135,"byte_end":15121138,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15121143,"byte_end":15121211,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15121216,"byte_end":15121291,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15121296,"byte_end":15121371,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15121376,"byte_end":15121448,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15121453,"byte_end":15121495,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15121500,"byte_end":15121503,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15121508,"byte_end":15121583,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15121588,"byte_end":15121666,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15121671,"byte_end":15121703,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15123329,"byte_end":15123335,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15122139,"byte_end":15122219,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15122224,"byte_end":15122300,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15122305,"byte_end":15122308,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15122313,"byte_end":15122388,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15122393,"byte_end":15122463,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15122468,"byte_end":15122539,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15122544,"byte_end":15122616,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15122621,"byte_end":15122679,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15122684,"byte_end":15122687,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15122692,"byte_end":15122761,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15122766,"byte_end":15122841,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15122846,"byte_end":15122922,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15122927,"byte_end":15122949,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15122954,"byte_end":15122957,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15122962,"byte_end":15123035,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15123040,"byte_end":15123113,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15123118,"byte_end":15123194,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15123199,"byte_end":15123202,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15123207,"byte_end":15123243,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15123248,"byte_end":15123280,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15123285,"byte_end":15123321,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":579},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15123669,"byte_end":15123676,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15123514,"byte_end":15123586,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15123587,"byte_end":15123607,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15123608,"byte_end":15123611,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15123612,"byte_end":15123658,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":581},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15123941,"byte_end":15123946,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":579},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15123689,"byte_end":15123721,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15123726,"byte_end":15123729,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15123734,"byte_end":15123811,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15123816,"byte_end":15123872,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15123877,"byte_end":15123880,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15123885,"byte_end":15123931,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15124297,"byte_end":15124303,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":579},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15123970,"byte_end":15124015,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15124020,"byte_end":15124023,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15124028,"byte_end":15124102,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15124107,"byte_end":15124187,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15124192,"byte_end":15124230,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15124235,"byte_end":15124238,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15124243,"byte_end":15124289,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1761},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15137940,"byte_end":15137946,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1764}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15139719,"byte_end":15139722,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15138088,"byte_end":15138168,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15138173,"byte_end":15138254,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15138259,"byte_end":15138262,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15138267,"byte_end":15138342,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15138347,"byte_end":15138417,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15138422,"byte_end":15138491,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15138496,"byte_end":15138568,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15138573,"byte_end":15138631,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15138636,"byte_end":15138639,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15138644,"byte_end":15138715,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15138720,"byte_end":15138797,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15138802,"byte_end":15138878,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15138883,"byte_end":15138905,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15138910,"byte_end":15138913,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15138918,"byte_end":15138991,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15138996,"byte_end":15139069,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15139074,"byte_end":15139150,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15139155,"byte_end":15139158,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15139163,"byte_end":15139239,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15139244,"byte_end":15139320,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15139325,"byte_end":15139400,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15139405,"byte_end":15139440,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15139445,"byte_end":15139448,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15139453,"byte_end":15139489,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15139494,"byte_end":15139526,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15139531,"byte_end":15139568,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15139573,"byte_end":15139611,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15139616,"byte_end":15139707,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15141330,"byte_end":15141343,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15139935,"byte_end":15140015,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15140020,"byte_end":15140101,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15140106,"byte_end":15140155,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15140160,"byte_end":15140163,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15140168,"byte_end":15140243,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15140248,"byte_end":15140318,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15140323,"byte_end":15140392,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15140397,"byte_end":15140469,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15140474,"byte_end":15140532,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15140537,"byte_end":15140540,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15140545,"byte_end":15140616,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15140621,"byte_end":15140698,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15140703,"byte_end":15140779,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15140784,"byte_end":15140806,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15140811,"byte_end":15140814,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15140819,"byte_end":15140892,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15140897,"byte_end":15140970,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15140975,"byte_end":15141051,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15141056,"byte_end":15141059,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15141064,"byte_end":15141100,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15141105,"byte_end":15141137,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15141142,"byte_end":15141179,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15141184,"byte_end":15141222,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15141227,"byte_end":15141318,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15143490,"byte_end":15143500,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15141913,"byte_end":15141993,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15141998,"byte_end":15142079,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15142084,"byte_end":15142087,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15142092,"byte_end":15142167,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15142172,"byte_end":15142242,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15142247,"byte_end":15142318,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15142323,"byte_end":15142395,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15142400,"byte_end":15142458,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15142463,"byte_end":15142466,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15142471,"byte_end":15142542,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15142547,"byte_end":15142624,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15142629,"byte_end":15142705,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15142710,"byte_end":15142732,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15142737,"byte_end":15142740,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15142745,"byte_end":15142824,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15142829,"byte_end":15142906,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15142911,"byte_end":15142914,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15142919,"byte_end":15142992,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15142997,"byte_end":15143070,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15143075,"byte_end":15143151,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15143156,"byte_end":15143159,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15143164,"byte_end":15143200,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15143205,"byte_end":15143237,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15143242,"byte_end":15143280,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15143285,"byte_end":15143323,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15143328,"byte_end":15143382,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15143387,"byte_end":15143478,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15144135,"byte_end":15144142,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15143852,"byte_end":15143915,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15143920,"byte_end":15143933,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15143938,"byte_end":15143941,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15143946,"byte_end":15144021,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15144026,"byte_end":15144096,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15144101,"byte_end":15144123,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15144486,"byte_end":15144493,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15144195,"byte_end":15144266,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15144271,"byte_end":15144284,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15144289,"byte_end":15144292,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15144297,"byte_end":15144372,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15144377,"byte_end":15144447,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15144452,"byte_end":15144474,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15144856,"byte_end":15144867,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15144558,"byte_end":15144636,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15144641,"byte_end":15144654,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15144659,"byte_end":15144662,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15144667,"byte_end":15144742,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15144747,"byte_end":15144817,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15144822,"byte_end":15144844,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15145214,"byte_end":15145219,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15144963,"byte_end":15145021,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15145026,"byte_end":15145039,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15145044,"byte_end":15145047,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15145052,"byte_end":15145126,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15145131,"byte_end":15145202,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15145531,"byte_end":15145540,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15145272,"byte_end":15145338,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15145343,"byte_end":15145356,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15145361,"byte_end":15145364,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15145369,"byte_end":15145443,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15145448,"byte_end":15145519,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15145660,"byte_end":15145671,"line_start":208,"line_end":208,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15145605,"byte_end":15145648,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15145806,"byte_end":15145821,"line_start":213,"line_end":213,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15145743,"byte_end":15145794,"line_start":212,"line_end":212,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15145961,"byte_end":15145973,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15145905,"byte_end":15145949,"line_start":217,"line_end":217,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15146110,"byte_end":15146126,"line_start":223,"line_end":223,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15146046,"byte_end":15146098,"line_start":222,"line_end":222,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15146476,"byte_end":15146486,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15146211,"byte_end":15146274,"line_start":227,"line_end":227,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15146279,"byte_end":15146282,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15146287,"byte_end":15146362,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15146367,"byte_end":15146437,"line_start":230,"line_end":230,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15146442,"byte_end":15146464,"line_start":231,"line_end":231,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15146858,"byte_end":15146868,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15146536,"byte_end":15146610,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15146615,"byte_end":15146656,"line_start":237,"line_end":237,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15146661,"byte_end":15146664,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15146669,"byte_end":15146744,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15146749,"byte_end":15146819,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15146824,"byte_end":15146846,"line_start":241,"line_end":241,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1228},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15148842,"byte_end":15148853,"line_start":312,"line_end":312,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15148527,"byte_end":15148598,"line_start":305,"line_end":305,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15148599,"byte_end":15148671,"line_start":306,"line_end":306,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15148672,"byte_end":15148732,"line_start":307,"line_end":307,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15148733,"byte_end":15148736,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15148737,"byte_end":15148773,"line_start":309,"line_end":309,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15148791,"byte_end":15148830,"line_start":311,"line_end":311,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1231},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15148939,"byte_end":15148941,"line_start":314,"line_end":314,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1228},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15148866,"byte_end":15148930,"line_start":313,"line_end":313,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1232},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15148973,"byte_end":15148978,"line_start":317,"line_end":317,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1228},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15148951,"byte_end":15148964,"line_start":316,"line_end":316,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1233},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15149043,"byte_end":15149051,"line_start":320,"line_end":320,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1228},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15148988,"byte_end":15149034,"line_start":319,"line_end":319,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1234},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15149138,"byte_end":15149147,"line_start":323,"line_end":323,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1228},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15149068,"byte_end":15149129,"line_start":322,"line_end":322,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15149380,"byte_end":15149383,"line_start":332,"line_end":332,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15149328,"byte_end":15149368,"line_start":331,"line_end":331,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1720},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15150112,"byte_end":15150122,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1723}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15150373,"byte_end":15150376,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15150305,"byte_end":15150361,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15150724,"byte_end":15150737,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15150608,"byte_end":15150690,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15150695,"byte_end":15150712,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15151491,"byte_end":15151498,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15151204,"byte_end":15151267,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15151272,"byte_end":15151289,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15151294,"byte_end":15151297,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15151302,"byte_end":15151377,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15151382,"byte_end":15151452,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15151457,"byte_end":15151479,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15151846,"byte_end":15151853,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15151551,"byte_end":15151622,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15151627,"byte_end":15151644,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15151649,"byte_end":15151652,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15151657,"byte_end":15151732,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15151737,"byte_end":15151807,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15151812,"byte_end":15151834,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15152220,"byte_end":15152231,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15151918,"byte_end":15151996,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15152001,"byte_end":15152018,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15152023,"byte_end":15152026,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15152031,"byte_end":15152106,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15152111,"byte_end":15152181,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15152186,"byte_end":15152208,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15152596,"byte_end":15152606,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15152327,"byte_end":15152394,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15152399,"byte_end":15152402,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15152407,"byte_end":15152482,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15152487,"byte_end":15152557,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15152562,"byte_end":15152584,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15152718,"byte_end":15152725,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15152656,"byte_end":15152706,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15152848,"byte_end":15152859,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15152778,"byte_end":15152836,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15152979,"byte_end":15152990,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15152924,"byte_end":15152967,"line_start":111,"line_end":111,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15153120,"byte_end":15153135,"line_start":117,"line_end":117,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15153057,"byte_end":15153108,"line_start":116,"line_end":116,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1679},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15155236,"byte_end":15155247,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1682}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15155454,"byte_end":15155457,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15155385,"byte_end":15155442,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15156015,"byte_end":15156022,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15155727,"byte_end":15155790,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15155795,"byte_end":15155813,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15155818,"byte_end":15155821,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15155826,"byte_end":15155901,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15155906,"byte_end":15155976,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15155981,"byte_end":15156003,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15156371,"byte_end":15156378,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15156075,"byte_end":15156146,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15156151,"byte_end":15156169,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15156174,"byte_end":15156177,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15156182,"byte_end":15156257,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15156262,"byte_end":15156332,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15156337,"byte_end":15156359,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15156746,"byte_end":15156757,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15156443,"byte_end":15156521,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15156526,"byte_end":15156544,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15156549,"byte_end":15156552,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15156557,"byte_end":15156632,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15156637,"byte_end":15156707,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15156712,"byte_end":15156734,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15157123,"byte_end":15157133,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15156853,"byte_end":15156921,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15156926,"byte_end":15156929,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15156934,"byte_end":15157009,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15157014,"byte_end":15157084,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15157089,"byte_end":15157111,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15157245,"byte_end":15157252,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15157183,"byte_end":15157233,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15157375,"byte_end":15157386,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15157305,"byte_end":15157363,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15157507,"byte_end":15157519,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15157451,"byte_end":15157495,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15157650,"byte_end":15157666,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15157586,"byte_end":15157638,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":955},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1240},{"krate":0,"index":1247},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1009},{"krate":0,"index":1252},{"krate":0,"index":1255},{"krate":0,"index":1257},{"krate":0,"index":1259},{"krate":0,"index":1265},{"krate":0,"index":1267},{"krate":0,"index":1269},{"krate":0,"index":1011},{"krate":0,"index":1018},{"krate":0,"index":1022},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1053}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15159193,"byte_end":15159245,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15159246,"byte_end":15159249,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15159250,"byte_end":15159320,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15159321,"byte_end":15159379,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15159380,"byte_end":15159452,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15159453,"byte_end":15159523,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15159524,"byte_end":15159591,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15159592,"byte_end":15159595,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15159596,"byte_end":15159617,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15159618,"byte_end":15159621,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15159622,"byte_end":15159697,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15159698,"byte_end":15159769,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15159770,"byte_end":15159841,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15159842,"byte_end":15159912,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15159913,"byte_end":15159953,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15159954,"byte_end":15159957,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15159958,"byte_end":15159965,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15159966,"byte_end":15160009,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160010,"byte_end":15160068,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160069,"byte_end":15160072,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160073,"byte_end":15160128,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160129,"byte_end":15160171,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160172,"byte_end":15160177,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160178,"byte_end":15160230,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160231,"byte_end":15160236,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160237,"byte_end":15160259,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160260,"byte_end":15160267,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160268,"byte_end":15160271,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160272,"byte_end":15160344,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160345,"byte_end":15160416,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160417,"byte_end":15160436,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160437,"byte_end":15160440,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160441,"byte_end":15160452,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160453,"byte_end":15160502,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160503,"byte_end":15160552,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160553,"byte_end":15160602,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160603,"byte_end":15160610,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160611,"byte_end":15160614,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160615,"byte_end":15160653,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160654,"byte_end":15160657,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160658,"byte_end":15160665,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160666,"byte_end":15160709,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160710,"byte_end":15160768,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160769,"byte_end":15160772,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160773,"byte_end":15160798,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160799,"byte_end":15160820,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160821,"byte_end":15160824,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160825,"byte_end":15160901,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160902,"byte_end":15160911,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160912,"byte_end":15160954,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160955,"byte_end":15160960,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15160961,"byte_end":15161034,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161035,"byte_end":15161082,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161083,"byte_end":15161086,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161087,"byte_end":15161124,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161125,"byte_end":15161139,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161140,"byte_end":15161145,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161146,"byte_end":15161153,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161154,"byte_end":15161157,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161158,"byte_end":15161200,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161201,"byte_end":15161204,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161205,"byte_end":15161216,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161217,"byte_end":15161256,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161257,"byte_end":15161296,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161297,"byte_end":15161336,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161337,"byte_end":15161344,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161345,"byte_end":15161348,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161349,"byte_end":15161363,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161364,"byte_end":15161367,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161368,"byte_end":15161443,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161444,"byte_end":15161517,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161518,"byte_end":15161584,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161585,"byte_end":15161654,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161655,"byte_end":15161720,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161721,"byte_end":15161724,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161725,"byte_end":15161741,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161742,"byte_end":15161745,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161746,"byte_end":15161822,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161823,"byte_end":15161864,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161865,"byte_end":15161868,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161869,"byte_end":15161876,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161877,"byte_end":15161908,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161909,"byte_end":15161959,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15161960,"byte_end":15162001,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162002,"byte_end":15162037,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162038,"byte_end":15162086,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162087,"byte_end":15162118,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162119,"byte_end":15162167,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162168,"byte_end":15162217,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162218,"byte_end":15162240,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162241,"byte_end":15162248,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162249,"byte_end":15162271,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162272,"byte_end":15162279,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162280,"byte_end":15162283,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162284,"byte_end":15162332,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162333,"byte_end":15162336,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162337,"byte_end":15162348,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162349,"byte_end":15162401,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162402,"byte_end":15162467,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162468,"byte_end":15162533,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162534,"byte_end":15162599,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162600,"byte_end":15162607,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162608,"byte_end":15162611,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162612,"byte_end":15162688,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162689,"byte_end":15162763,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162764,"byte_end":15162836,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162837,"byte_end":15162913,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162914,"byte_end":15162956,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162957,"byte_end":15162960,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162961,"byte_end":15162977,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162978,"byte_end":15162981,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15162982,"byte_end":15163057,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163058,"byte_end":15163099,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163100,"byte_end":15163103,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163104,"byte_end":15163111,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163112,"byte_end":15163143,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163144,"byte_end":15163194,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163195,"byte_end":15163236,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163237,"byte_end":15163272,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163273,"byte_end":15163321,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163322,"byte_end":15163353,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163354,"byte_end":15163402,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163403,"byte_end":15163462,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163463,"byte_end":15163485,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163486,"byte_end":15163493,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163494,"byte_end":15163516,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163517,"byte_end":15163524,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163525,"byte_end":15163528,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163529,"byte_end":15163577,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163578,"byte_end":15163581,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163582,"byte_end":15163593,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163594,"byte_end":15163643,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163644,"byte_end":15163698,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163699,"byte_end":15163753,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163754,"byte_end":15163808,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163809,"byte_end":15163816,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163817,"byte_end":15163820,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163821,"byte_end":15163894,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163895,"byte_end":15163962,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163963,"byte_end":15163966,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163967,"byte_end":15163983,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163984,"byte_end":15163987,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15163988,"byte_end":15164064,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164065,"byte_end":15164137,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164138,"byte_end":15164177,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164178,"byte_end":15164181,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164182,"byte_end":15164189,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164190,"byte_end":15164221,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164222,"byte_end":15164272,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164273,"byte_end":15164314,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164315,"byte_end":15164350,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164351,"byte_end":15164399,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164400,"byte_end":15164431,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164432,"byte_end":15164479,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164480,"byte_end":15164500,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164501,"byte_end":15164523,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164524,"byte_end":15164531,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164532,"byte_end":15164554,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164555,"byte_end":15164562,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164563,"byte_end":15164566,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164567,"byte_end":15164615,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164616,"byte_end":15164619,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164620,"byte_end":15164631,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164632,"byte_end":15164684,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164685,"byte_end":15164750,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164751,"byte_end":15164816,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164817,"byte_end":15164882,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164883,"byte_end":15164890,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164891,"byte_end":15164894,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164895,"byte_end":15164967,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15164968,"byte_end":15165043,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165044,"byte_end":15165116,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165117,"byte_end":15165193,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165194,"byte_end":15165267,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165268,"byte_end":15165271,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165272,"byte_end":15165288,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165289,"byte_end":15165292,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165293,"byte_end":15165367,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165368,"byte_end":15165435,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165436,"byte_end":15165439,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165440,"byte_end":15165447,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165448,"byte_end":15165479,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165480,"byte_end":15165530,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165531,"byte_end":15165572,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165573,"byte_end":15165608,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165609,"byte_end":15165657,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165658,"byte_end":15165689,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165690,"byte_end":15165738,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165739,"byte_end":15165759,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165760,"byte_end":15165782,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165783,"byte_end":15165790,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165791,"byte_end":15165813,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165814,"byte_end":15165821,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165822,"byte_end":15165825,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165826,"byte_end":15165874,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165875,"byte_end":15165878,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165879,"byte_end":15165890,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165891,"byte_end":15165917,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165918,"byte_end":15165963,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15165964,"byte_end":15166009,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166010,"byte_end":15166055,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166056,"byte_end":15166059,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166060,"byte_end":15166088,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166089,"byte_end":15166134,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166135,"byte_end":15166180,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166181,"byte_end":15166226,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166227,"byte_end":15166234,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166235,"byte_end":15166238,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166239,"byte_end":15166311,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166312,"byte_end":15166388,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166389,"byte_end":15166459,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166460,"byte_end":15166529,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166530,"byte_end":15166567,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166568,"byte_end":15166571,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166572,"byte_end":15166646,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166647,"byte_end":15166701,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166702,"byte_end":15166705,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166706,"byte_end":15166722,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166723,"byte_end":15166726,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166727,"byte_end":15166800,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166801,"byte_end":15166877,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166878,"byte_end":15166952,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166953,"byte_end":15166966,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166967,"byte_end":15166970,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166971,"byte_end":15166978,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15166979,"byte_end":15167010,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167011,"byte_end":15167061,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167062,"byte_end":15167103,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167104,"byte_end":15167139,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167140,"byte_end":15167189,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167190,"byte_end":15167221,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167222,"byte_end":15167270,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167271,"byte_end":15167315,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167316,"byte_end":15167338,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167339,"byte_end":15167346,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167347,"byte_end":15167369,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167370,"byte_end":15167377,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167378,"byte_end":15167381,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167382,"byte_end":15167430,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167431,"byte_end":15167434,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167435,"byte_end":15167446,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167447,"byte_end":15167473,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167474,"byte_end":15167524,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167525,"byte_end":15167575,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167576,"byte_end":15167626,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167627,"byte_end":15167630,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167631,"byte_end":15167651,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167652,"byte_end":15167682,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167683,"byte_end":15167713,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167714,"byte_end":15167744,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167745,"byte_end":15167752,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167753,"byte_end":15167756,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167757,"byte_end":15167830,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167831,"byte_end":15167906,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167907,"byte_end":15167979,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15167980,"byte_end":15168018,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168019,"byte_end":15168022,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168023,"byte_end":15168097,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168098,"byte_end":15168174,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168175,"byte_end":15168248,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168249,"byte_end":15168277,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168278,"byte_end":15168281,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168282,"byte_end":15168298,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168299,"byte_end":15168302,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168303,"byte_end":15168376,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168377,"byte_end":15168453,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168454,"byte_end":15168528,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168529,"byte_end":15168601,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168602,"byte_end":15168613,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168614,"byte_end":15168617,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168618,"byte_end":15168625,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168626,"byte_end":15168657,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168658,"byte_end":15168708,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168709,"byte_end":15168750,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168751,"byte_end":15168786,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168787,"byte_end":15168836,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168837,"byte_end":15168868,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168869,"byte_end":15168934,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168935,"byte_end":15168955,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168956,"byte_end":15168978,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168979,"byte_end":15168986,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168987,"byte_end":15168994,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168995,"byte_end":15168998,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15168999,"byte_end":15169047,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169048,"byte_end":15169051,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169052,"byte_end":15169063,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169064,"byte_end":15169090,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169091,"byte_end":15169141,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169142,"byte_end":15169192,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169193,"byte_end":15169243,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169244,"byte_end":15169247,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169248,"byte_end":15169268,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169269,"byte_end":15169299,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169300,"byte_end":15169330,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169331,"byte_end":15169361,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169362,"byte_end":15169369,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169370,"byte_end":15169373,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169374,"byte_end":15169447,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169448,"byte_end":15169522,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169523,"byte_end":15169597,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169598,"byte_end":15169671,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169672,"byte_end":15169748,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169749,"byte_end":15169782,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169783,"byte_end":15169786,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169787,"byte_end":15169803,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169804,"byte_end":15169807,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169808,"byte_end":15169882,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169883,"byte_end":15169950,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169951,"byte_end":15169954,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169955,"byte_end":15169962,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169963,"byte_end":15169994,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15169995,"byte_end":15170045,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170046,"byte_end":15170087,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170088,"byte_end":15170123,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170124,"byte_end":15170172,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170173,"byte_end":15170204,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170205,"byte_end":15170252,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170253,"byte_end":15170299,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170300,"byte_end":15170322,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170323,"byte_end":15170330,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170331,"byte_end":15170353,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170354,"byte_end":15170361,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170362,"byte_end":15170365,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170366,"byte_end":15170414,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170415,"byte_end":15170418,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170419,"byte_end":15170430,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170431,"byte_end":15170487,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170488,"byte_end":15170549,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170550,"byte_end":15170611,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170612,"byte_end":15170673,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170674,"byte_end":15170681,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170682,"byte_end":15170685,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170686,"byte_end":15170760,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170761,"byte_end":15170781,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170782,"byte_end":15170785,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170786,"byte_end":15170800,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170801,"byte_end":15170804,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170805,"byte_end":15170880,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170881,"byte_end":15170953,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15170954,"byte_end":15171022,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171023,"byte_end":15171099,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171100,"byte_end":15171141,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171142,"byte_end":15171145,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171146,"byte_end":15171216,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171217,"byte_end":15171235,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171236,"byte_end":15171239,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171240,"byte_end":15171247,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171248,"byte_end":15171280,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171281,"byte_end":15171331,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171332,"byte_end":15171376,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171377,"byte_end":15171390,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171391,"byte_end":15171426,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171427,"byte_end":15171458,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171459,"byte_end":15171482,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171483,"byte_end":15171490,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171491,"byte_end":15171513,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171514,"byte_end":15171521,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171522,"byte_end":15171525,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171526,"byte_end":15171576,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171577,"byte_end":15171580,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171581,"byte_end":15171592,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171593,"byte_end":15171626,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171627,"byte_end":15171660,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171661,"byte_end":15171694,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171695,"byte_end":15171702,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171703,"byte_end":15171706,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171707,"byte_end":15171776,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171777,"byte_end":15171814,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171815,"byte_end":15171854,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171855,"byte_end":15171900,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171901,"byte_end":15171948,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171949,"byte_end":15171979,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15171980,"byte_end":15172013,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1240},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15172575,"byte_end":15172582,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15172257,"byte_end":15172312,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15172313,"byte_end":15172316,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15172317,"byte_end":15172392,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15172393,"byte_end":15172473,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15172474,"byte_end":15172533,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1009},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15173253,"byte_end":15173278,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":1010}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15173168,"byte_end":15173241,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1252},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15173630,"byte_end":15173650,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1254}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15173299,"byte_end":15173373,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15173374,"byte_end":15173377,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15173378,"byte_end":15173457,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15173458,"byte_end":15173501,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15173502,"byte_end":15173505,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15173506,"byte_end":15173559,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15173560,"byte_end":15173563,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15173564,"byte_end":15173594,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15173994,"byte_end":15173997,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15173903,"byte_end":15173982,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15174224,"byte_end":15174231,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15174121,"byte_end":15174196,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15174201,"byte_end":15174212,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15174453,"byte_end":15174469,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15174281,"byte_end":15174322,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15174327,"byte_end":15174330,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15174335,"byte_end":15174408,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15174413,"byte_end":15174441,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15174890,"byte_end":15174910,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15174534,"byte_end":15174568,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15174573,"byte_end":15174576,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15174581,"byte_end":15174651,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15174656,"byte_end":15174731,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15174736,"byte_end":15174808,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15174813,"byte_end":15174878,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15180166,"byte_end":15180169,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15179624,"byte_end":15179699,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15179704,"byte_end":15179715,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15179720,"byte_end":15179723,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15179728,"byte_end":15179742,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15179747,"byte_end":15179750,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15179755,"byte_end":15179762,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15179767,"byte_end":15179798,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15179803,"byte_end":15179851,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15179856,"byte_end":15179859,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15179864,"byte_end":15179905,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15179910,"byte_end":15179945,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15179950,"byte_end":15179981,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15179986,"byte_end":15180017,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15180022,"byte_end":15180051,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15180056,"byte_end":15180076,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15180081,"byte_end":15180103,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15180108,"byte_end":15180115,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15180120,"byte_end":15180142,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15180147,"byte_end":15180154,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181354,"byte_end":15181364,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15180833,"byte_end":15180882,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15180887,"byte_end":15180890,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15180895,"byte_end":15180927,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15180932,"byte_end":15180935,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15180940,"byte_end":15181008,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181013,"byte_end":15181016,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181021,"byte_end":15181035,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181040,"byte_end":15181043,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181048,"byte_end":15181055,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181060,"byte_end":15181091,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181096,"byte_end":15181144,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181149,"byte_end":15181152,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181157,"byte_end":15181198,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181203,"byte_end":15181238,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181243,"byte_end":15181264,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181269,"byte_end":15181291,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181296,"byte_end":15181303,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181308,"byte_end":15181330,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181335,"byte_end":15181342,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181996,"byte_end":15182009,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181463,"byte_end":15181515,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181520,"byte_end":15181523,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181528,"byte_end":15181566,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181571,"byte_end":15181574,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181579,"byte_end":15181647,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181652,"byte_end":15181655,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181660,"byte_end":15181674,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181679,"byte_end":15181682,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181687,"byte_end":15181694,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181699,"byte_end":15181730,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181735,"byte_end":15181783,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181788,"byte_end":15181791,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181796,"byte_end":15181837,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181842,"byte_end":15181877,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181882,"byte_end":15181906,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181911,"byte_end":15181933,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181938,"byte_end":15181945,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181950,"byte_end":15181972,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15181977,"byte_end":15181984,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182642,"byte_end":15182655,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182109,"byte_end":15182161,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182166,"byte_end":15182169,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182174,"byte_end":15182212,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182217,"byte_end":15182220,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182225,"byte_end":15182293,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182298,"byte_end":15182301,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182306,"byte_end":15182320,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182325,"byte_end":15182328,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182333,"byte_end":15182340,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182345,"byte_end":15182376,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182381,"byte_end":15182429,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182434,"byte_end":15182437,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182442,"byte_end":15182483,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182488,"byte_end":15182523,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182528,"byte_end":15182552,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182557,"byte_end":15182579,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182584,"byte_end":15182591,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182596,"byte_end":15182618,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182623,"byte_end":15182630,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183736,"byte_end":15183752,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182824,"byte_end":15182853,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182858,"byte_end":15182861,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182866,"byte_end":15182938,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182943,"byte_end":15182968,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182973,"byte_end":15182976,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15182981,"byte_end":15183053,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183058,"byte_end":15183127,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183132,"byte_end":15183205,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183210,"byte_end":15183222,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183227,"byte_end":15183230,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183235,"byte_end":15183310,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183315,"byte_end":15183376,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183381,"byte_end":15183384,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183389,"byte_end":15183403,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183408,"byte_end":15183411,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183416,"byte_end":15183423,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183428,"byte_end":15183459,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183464,"byte_end":15183512,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183517,"byte_end":15183520,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183525,"byte_end":15183566,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183571,"byte_end":15183606,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183611,"byte_end":15183646,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183651,"byte_end":15183673,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183678,"byte_end":15183685,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183690,"byte_end":15183712,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183717,"byte_end":15183724,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184413,"byte_end":15184432,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183849,"byte_end":15183912,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183917,"byte_end":15183920,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183925,"byte_end":15183976,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183981,"byte_end":15183984,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15183989,"byte_end":15184057,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184062,"byte_end":15184065,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184070,"byte_end":15184084,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184089,"byte_end":15184092,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184097,"byte_end":15184104,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184109,"byte_end":15184140,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184145,"byte_end":15184193,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184198,"byte_end":15184201,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184206,"byte_end":15184247,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184252,"byte_end":15184287,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184292,"byte_end":15184323,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184328,"byte_end":15184350,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184355,"byte_end":15184362,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184367,"byte_end":15184389,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184394,"byte_end":15184401,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185091,"byte_end":15185110,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184601,"byte_end":15184667,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184672,"byte_end":15184675,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184680,"byte_end":15184735,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184740,"byte_end":15184743,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184748,"byte_end":15184762,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184767,"byte_end":15184770,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184775,"byte_end":15184782,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184787,"byte_end":15184818,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184823,"byte_end":15184871,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184876,"byte_end":15184879,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184884,"byte_end":15184925,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184930,"byte_end":15184965,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15184970,"byte_end":15185001,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185006,"byte_end":15185028,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185033,"byte_end":15185040,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185045,"byte_end":15185067,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185072,"byte_end":15185079,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185664,"byte_end":15185681,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185213,"byte_end":15185286,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185291,"byte_end":15185309,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185314,"byte_end":15185317,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185322,"byte_end":15185336,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185341,"byte_end":15185344,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185349,"byte_end":15185356,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185361,"byte_end":15185392,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185397,"byte_end":15185445,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185450,"byte_end":15185453,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185458,"byte_end":15185499,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185504,"byte_end":15185539,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185544,"byte_end":15185574,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185579,"byte_end":15185601,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185606,"byte_end":15185613,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185618,"byte_end":15185640,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185645,"byte_end":15185652,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186331,"byte_end":15186339,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185782,"byte_end":15185845,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185850,"byte_end":15185853,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185858,"byte_end":15185919,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185924,"byte_end":15185927,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185932,"byte_end":15185986,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185991,"byte_end":15185994,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15185999,"byte_end":15186013,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186018,"byte_end":15186021,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186026,"byte_end":15186033,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186038,"byte_end":15186069,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186074,"byte_end":15186122,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186127,"byte_end":15186130,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186135,"byte_end":15186176,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186181,"byte_end":15186216,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186221,"byte_end":15186241,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186246,"byte_end":15186268,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186273,"byte_end":15186280,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186285,"byte_end":15186307,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186312,"byte_end":15186319,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186859,"byte_end":15186868,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186437,"byte_end":15186500,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186505,"byte_end":15186508,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186513,"byte_end":15186527,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186532,"byte_end":15186535,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186540,"byte_end":15186547,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186552,"byte_end":15186600,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186605,"byte_end":15186626,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186631,"byte_end":15186666,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186671,"byte_end":15186702,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186707,"byte_end":15186738,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186743,"byte_end":15186772,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186777,"byte_end":15186797,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186802,"byte_end":15186823,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186828,"byte_end":15186835,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15186840,"byte_end":15186847,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187524,"byte_end":15187532,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187020,"byte_end":15187073,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187078,"byte_end":15187081,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187086,"byte_end":15187100,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187105,"byte_end":15187108,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187113,"byte_end":15187120,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187125,"byte_end":15187156,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187161,"byte_end":15187209,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187214,"byte_end":15187217,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187222,"byte_end":15187263,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187268,"byte_end":15187303,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187308,"byte_end":15187339,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187344,"byte_end":15187375,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187380,"byte_end":15187409,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187414,"byte_end":15187434,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187439,"byte_end":15187461,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187466,"byte_end":15187473,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187478,"byte_end":15187500,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187505,"byte_end":15187512,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188105,"byte_end":15188114,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187696,"byte_end":15187750,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187755,"byte_end":15187758,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187763,"byte_end":15187777,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187782,"byte_end":15187785,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187790,"byte_end":15187797,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187802,"byte_end":15187834,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187839,"byte_end":15187889,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187894,"byte_end":15187938,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187943,"byte_end":15187978,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15187983,"byte_end":15188014,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188019,"byte_end":15188042,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188047,"byte_end":15188054,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188059,"byte_end":15188081,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188086,"byte_end":15188093,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188723,"byte_end":15188733,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188275,"byte_end":15188324,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188329,"byte_end":15188332,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188337,"byte_end":15188351,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188356,"byte_end":15188359,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188364,"byte_end":15188371,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188376,"byte_end":15188421,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188426,"byte_end":15188476,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188481,"byte_end":15188537,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188542,"byte_end":15188555,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188560,"byte_end":15188595,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188600,"byte_end":15188631,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188636,"byte_end":15188660,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188665,"byte_end":15188672,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188677,"byte_end":15188699,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15188704,"byte_end":15188711,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1270},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15190112,"byte_end":15190122,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15189869,"byte_end":15189956,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15189957,"byte_end":15189960,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15189961,"byte_end":15189999,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15190000,"byte_end":15190038,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15191222,"byte_end":15191225,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15190803,"byte_end":15190863,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15190868,"byte_end":15190871,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15190876,"byte_end":15190886,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15190891,"byte_end":15190894,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15190899,"byte_end":15190971,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15190976,"byte_end":15191049,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15191054,"byte_end":15191121,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15191126,"byte_end":15191129,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15191134,"byte_end":15191210,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192356,"byte_end":15192375,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15191383,"byte_end":15191443,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15191448,"byte_end":15191451,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15191456,"byte_end":15191519,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15191524,"byte_end":15191602,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15191607,"byte_end":15191674,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15191679,"byte_end":15191751,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15191756,"byte_end":15191826,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15191831,"byte_end":15191854,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15191859,"byte_end":15191862,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15191867,"byte_end":15191877,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15191882,"byte_end":15191885,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15191890,"byte_end":15191965,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15191970,"byte_end":15192043,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192048,"byte_end":15192124,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192129,"byte_end":15192202,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192207,"byte_end":15192277,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192282,"byte_end":15192285,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192290,"byte_end":15192344,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192941,"byte_end":15192951,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192503,"byte_end":15192553,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192558,"byte_end":15192561,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192566,"byte_end":15192573,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192578,"byte_end":15192597,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192602,"byte_end":15192640,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192645,"byte_end":15192648,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192653,"byte_end":15192687,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192692,"byte_end":15192739,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192744,"byte_end":15192751,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192756,"byte_end":15192763,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192768,"byte_end":15192806,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192811,"byte_end":15192814,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192819,"byte_end":15192872,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192877,"byte_end":15192917,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15192922,"byte_end":15192929,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1293},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15197277,"byte_end":15197298,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1292},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15197231,"byte_end":15197272,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1295},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15197334,"byte_end":15197336,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1292},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15197304,"byte_end":15197329,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1292},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15197209,"byte_end":15197224,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1295}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15197126,"byte_end":15197182,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1300},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15199258,"byte_end":15199275,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198072,"byte_end":15198213,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198214,"byte_end":15198217,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198218,"byte_end":15198256,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198257,"byte_end":15198295,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198296,"byte_end":15198299,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198300,"byte_end":15198313,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198314,"byte_end":15198381,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198382,"byte_end":15198385,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198386,"byte_end":15198419,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198420,"byte_end":15198449,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198450,"byte_end":15198453,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198454,"byte_end":15198461,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198462,"byte_end":15198518,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198519,"byte_end":15198553,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198554,"byte_end":15198557,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198558,"byte_end":15198563,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198564,"byte_end":15198611,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198612,"byte_end":15198665,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198666,"byte_end":15198743,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198744,"byte_end":15198779,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198780,"byte_end":15198801,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198802,"byte_end":15198852,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198853,"byte_end":15198916,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198917,"byte_end":15198980,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15198981,"byte_end":15199044,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15199045,"byte_end":15199101,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15199102,"byte_end":15199151,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15199152,"byte_end":15199164,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15199165,"byte_end":15199172,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15199173,"byte_end":15199180,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15199181,"byte_end":15199184,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15200610,"byte_end":15200613,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15200168,"byte_end":15200236,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15200241,"byte_end":15200244,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15200249,"byte_end":15200259,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15200264,"byte_end":15200267,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15200272,"byte_end":15200351,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15200356,"byte_end":15200430,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15200435,"byte_end":15200502,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15200507,"byte_end":15200510,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15200515,"byte_end":15200598,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15201924,"byte_end":15201943,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15200893,"byte_end":15200961,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15200966,"byte_end":15200969,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15200974,"byte_end":15201044,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15201049,"byte_end":15201135,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15201140,"byte_end":15201210,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15201215,"byte_end":15201292,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15201297,"byte_end":15201367,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15201372,"byte_end":15201395,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15201400,"byte_end":15201403,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15201408,"byte_end":15201418,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15201423,"byte_end":15201426,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15201431,"byte_end":15201513,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15201518,"byte_end":15201591,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15201596,"byte_end":15201673,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15201678,"byte_end":15201751,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15201756,"byte_end":15201831,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15201836,"byte_end":15201839,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15201844,"byte_end":15201912,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15202731,"byte_end":15202741,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15202200,"byte_end":15202251,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15202256,"byte_end":15202259,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15202264,"byte_end":15202271,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15202276,"byte_end":15202295,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15202300,"byte_end":15202345,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15202350,"byte_end":15202353,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15202358,"byte_end":15202430,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15202435,"byte_end":15202482,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15202487,"byte_end":15202494,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15202499,"byte_end":15202506,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15202511,"byte_end":15202556,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15202561,"byte_end":15202564,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15202569,"byte_end":15202662,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15202667,"byte_end":15202707,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15202712,"byte_end":15202719,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1325},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15206837,"byte_end":15206859,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1324},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15206790,"byte_end":15206832,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1327},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15206895,"byte_end":15206897,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1324},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15206865,"byte_end":15206890,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1324},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15206761,"byte_end":15206783,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1325},{"krate":0,"index":1327}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15206677,"byte_end":15206734,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1332},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1374},{"krate":0,"index":1413},{"krate":0,"index":1470},{"krate":0,"index":1473},{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1483}],"decl_id":null,"docs":" Helpers for IO related tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/cfg.rs","byte_start":6093,"byte_end":6115,"line_start":34,"line_end":34,"column_start":13,"column_end":35}},{"value":"/ Helpers for IO related tasks.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15207466,"byte_end":15207499,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15207500,"byte_end":15207503,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The stream types are often used in combination with hyper or reqwest, as they","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15207504,"byte_end":15207585,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ allow converting between a hyper [`Body`] and [`AsyncRead`].","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15207586,"byte_end":15207650,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15207651,"byte_end":15207654,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The [`SyncIoBridge`] type converts from the world of async I/O","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15207655,"byte_end":15207721,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/ to synchronous I/O; this may often come up when using synchronous APIs","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15207722,"byte_end":15207796,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ inside [`tokio::task::spawn_blocking`].","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15207797,"byte_end":15207840,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15207841,"byte_end":15207844,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Body`]: https://docs.rs/hyper/0.13/hyper/struct.Body.html","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15207845,"byte_end":15207908,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15207909,"byte_end":15207948,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1356},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209319,"byte_end":15209327,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"read_buf","qualname":"::io::read_buf::read_buf","value":"pub async fn read_buf<R, B, '_, '_>(&'_ mut R, &'_ mut B) -> /*impl Trait*/\nwhere R: AsyncRead + Unpin, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208396,"byte_end":15208474,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208475,"byte_end":15208478,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`BufMut`]: bytes::BufMut","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208479,"byte_end":15208508,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208509,"byte_end":15208512,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208513,"byte_end":15208526,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208527,"byte_end":15208530,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208531,"byte_end":15208538,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208539,"byte_end":15208572,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208573,"byte_end":15208604,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ use tokio::io::Result;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208605,"byte_end":15208631,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/ use tokio_util::io::{StreamReader, read_buf};","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208632,"byte_end":15208681,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208682,"byte_end":15208702,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208703,"byte_end":15208749,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208750,"byte_end":15208753,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208754,"byte_end":15208832,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ // ready.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208833,"byte_end":15208846,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208847,"byte_end":15208951,"line_start":24,"line_end":24,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208952,"byte_end":15208955,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208956,"byte_end":15208990,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ let mut reads = 0;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15208991,"byte_end":15209013,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209014,"byte_end":15209017,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209018,"byte_end":15209028,"line_start":29,"line_end":29,"column_start":1,"column_end":11}},{"value":"/     reads += 1;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209029,"byte_end":15209048,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/     let n = read_buf(&mut read, &mut buf).await?;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209049,"byte_end":15209102,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209103,"byte_end":15209106,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     if n == 0 {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209107,"byte_end":15209126,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/         break;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209127,"byte_end":15209145,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209146,"byte_end":15209155,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209156,"byte_end":15209161,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209162,"byte_end":15209165,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209166,"byte_end":15209210,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209211,"byte_end":15209235,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209236,"byte_end":15209276,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209277,"byte_end":15209289,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209290,"byte_end":15209297,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209298,"byte_end":15209305,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1640},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15211213,"byte_end":15211225,"line_start":45,"line_end":45,"column_start":16,"column_end":28},"name":"ReaderStream","qualname":"::io::reader_stream::ReaderStream","value":"ReaderStream {  }","parent":null,"children":[{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644}],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] of byte chunks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15211734,"byte_end":15211737,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<ReaderStream<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] with item type\n `Result<Bytes, std::io::Error>`.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] into a [`Stream`] with item type","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15211527,"byte_end":15211588,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"/ `Result<Bytes, std::io::Error>`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15211593,"byte_end":15211629,"line_start":59,"line_end":59,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15211634,"byte_end":15211637,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15211642,"byte_end":15211681,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15211686,"byte_end":15211722,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15212172,"byte_end":15212185,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ReaderStream<R>>::with_capacity","value":"pub fn with_capacity(R, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] with item type\n `Result<Bytes, std::io::Error>`,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] into a [`Stream`] with item type","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15211911,"byte_end":15211972,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/ `Result<Bytes, std::io::Error>`,","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15211977,"byte_end":15212013,"line_start":72,"line_end":72,"column_start":5,"column_end":41}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15212018,"byte_end":15212067,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15212072,"byte_end":15212075,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15212080,"byte_end":15212119,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15212124,"byte_end":15212160,"line_start":76,"line_end":76,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1593},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15215193,"byte_end":15215205,"line_start":57,"line_end":57,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":1596},{"krate":0,"index":1597}],"decl_id":null,"docs":" Convert a [`Stream`] of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15215822,"byte_end":15215825,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamReader<S, B>>::new","value":"pub fn new(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15215404,"byte_end":15215484,"line_start":70,"line_end":70,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15215489,"byte_end":15215492,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The item should be a [`Result`] with the ok variant being something that","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15215497,"byte_end":15215573,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ implements the [`Buf`] trait (e.g. `Vec<u8>` or `Bytes`). The error","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15215578,"byte_end":15215649,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ should be convertible into an [io error].","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15215654,"byte_end":15215699,"line_start":74,"line_end":74,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15215704,"byte_end":15215707,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`Result`]: std::result::Result","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15215712,"byte_end":15215747,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15215752,"byte_end":15215775,"line_start":77,"line_end":77,"column_start":5,"column_end":28}},{"value":"/ [io error]: std::io::Error","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15215780,"byte_end":15215810,"line_start":78,"line_end":78,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15216341,"byte_end":15216348,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamReader<S, B>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying stream.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15216204,"byte_end":15216250,"line_start":97,"line_end":97,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15216255,"byte_end":15216258,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15216263,"byte_end":15216329,"line_start":99,"line_end":99,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15216540,"byte_end":15216547,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamReader<S, B>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying stream.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15216395,"byte_end":15216449,"line_start":104,"line_end":104,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15216454,"byte_end":15216457,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15216462,"byte_end":15216528,"line_start":106,"line_end":106,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15216758,"byte_end":15216769,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamReader<S, B>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut S>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying stream.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15216606,"byte_end":15216667,"line_start":111,"line_end":111,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15216672,"byte_end":15216675,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15216680,"byte_end":15216746,"line_start":113,"line_end":113,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15217000,"byte_end":15217010,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamReader<S, B>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying stream.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15216849,"byte_end":15216912,"line_start":118,"line_end":118,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15216917,"byte_end":15216920,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15216925,"byte_end":15216988,"line_start":120,"line_end":120,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":201},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":390}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":6878,"byte_end":6908,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1486},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40807,"byte_end":40816,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1487}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40630,"byte_end":40694,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40695,"byte_end":40778,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41079,"byte_end":41085,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40892,"byte_end":40966,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40971,"byte_end":41041,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41046,"byte_end":41067,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8905,"byte_end":8922,"line_start":57,"line_end":57,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":63}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7687,"byte_end":7764,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7765,"byte_end":7775,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7776,"byte_end":7779,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7780,"byte_end":7845,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7846,"byte_end":7920,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7921,"byte_end":7924,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7925,"byte_end":8008,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8009,"byte_end":8012,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8013,"byte_end":8027,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8028,"byte_end":8031,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8032,"byte_end":8045,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8046,"byte_end":8068,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8069,"byte_end":8109,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8110,"byte_end":8113,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8114,"byte_end":8132,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8133,"byte_end":8154,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8155,"byte_end":8200,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8201,"byte_end":8242,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8243,"byte_end":8246,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8247,"byte_end":8298,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8299,"byte_end":8362,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8363,"byte_end":8384,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8385,"byte_end":8434,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8435,"byte_end":8481,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8482,"byte_end":8503,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8504,"byte_end":8521,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8522,"byte_end":8603,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8604,"byte_end":8626,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8627,"byte_end":8644,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8645,"byte_end":8658,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8659,"byte_end":8670,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8671,"byte_end":8674,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8675,"byte_end":8708,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8709,"byte_end":8784,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8785,"byte_end":8812,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8813,"byte_end":8824,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8825,"byte_end":8828,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8829,"byte_end":8879,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8880,"byte_end":8885,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8886,"byte_end":8893,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9342,"byte_end":9367,"line_start":69,"line_end":69,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9189,"byte_end":9263,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9264,"byte_end":9281,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9282,"byte_end":9330,"line_start":68,"line_end":68,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11875,"byte_end":11878,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11800,"byte_end":11863,"line_start":142,"line_end":142,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13931,"byte_end":13942,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12668,"byte_end":12739,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12744,"byte_end":12777,"line_start":168,"line_end":168,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12782,"byte_end":12785,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12790,"byte_end":12861,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12866,"byte_end":12898,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12903,"byte_end":12906,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12911,"byte_end":12925,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12930,"byte_end":12933,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12938,"byte_end":12951,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12956,"byte_end":12978,"line_start":176,"line_end":176,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12983,"byte_end":13023,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13028,"byte_end":13031,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13036,"byte_end":13054,"line_start":179,"line_end":179,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13059,"byte_end":13080,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13085,"byte_end":13130,"line_start":181,"line_end":181,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13135,"byte_end":13181,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13186,"byte_end":13189,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13194,"byte_end":13245,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13250,"byte_end":13313,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13318,"byte_end":13339,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13344,"byte_end":13392,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13397,"byte_end":13443,"line_start":188,"line_end":188,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13448,"byte_end":13469,"line_start":189,"line_end":189,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13474,"byte_end":13491,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13496,"byte_end":13577,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13582,"byte_end":13604,"line_start":192,"line_end":192,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13609,"byte_end":13626,"line_start":193,"line_end":193,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13631,"byte_end":13644,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13649,"byte_end":13660,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13665,"byte_end":13668,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13673,"byte_end":13706,"line_start":197,"line_end":197,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13711,"byte_end":13786,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13791,"byte_end":13818,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13823,"byte_end":13834,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13839,"byte_end":13842,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13847,"byte_end":13897,"line_start":202,"line_end":202,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13902,"byte_end":13907,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13912,"byte_end":13919,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16517,"byte_end":16523,"line_start":263,"line_end":263,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16328,"byte_end":16400,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16405,"byte_end":16425,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16430,"byte_end":16433,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16438,"byte_end":16505,"line_start":262,"line_end":262,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16651,"byte_end":16663,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16575,"byte_end":16639,"line_start":267,"line_end":267,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16814,"byte_end":16823,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16728,"byte_end":16802,"line_start":272,"line_end":272,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17225,"byte_end":17235,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17062,"byte_end":17103,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17108,"byte_end":17111,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17116,"byte_end":17188,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17193,"byte_end":17213,"line_start":284,"line_end":284,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1561},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71395,"byte_end":71405,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71257,"byte_end":71314,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71315,"byte_end":71318,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71319,"byte_end":71366,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72128,"byte_end":72131,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72086,"byte_end":72116,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72846,"byte_end":72856,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72334,"byte_end":72363,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72368,"byte_end":72371,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72376,"byte_end":72452,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72457,"byte_end":72526,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72531,"byte_end":72549,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72554,"byte_end":72557,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72562,"byte_end":72633,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72638,"byte_end":72711,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72716,"byte_end":72790,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72795,"byte_end":72834,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74377,"byte_end":74391,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73280,"byte_end":73361,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73366,"byte_end":73412,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73417,"byte_end":73420,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73425,"byte_end":73473,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73478,"byte_end":73481,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73486,"byte_end":73570,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73575,"byte_end":73634,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73639,"byte_end":73724,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73729,"byte_end":73748,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73753,"byte_end":73832,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73837,"byte_end":73840,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73845,"byte_end":73920,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73925,"byte_end":74001,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74006,"byte_end":74061,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74066,"byte_end":74140,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74145,"byte_end":74218,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74223,"byte_end":74257,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74262,"byte_end":74265,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74270,"byte_end":74346,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74351,"byte_end":74365,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75025,"byte_end":75033,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74777,"byte_end":74842,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74847,"byte_end":74850,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74855,"byte_end":74928,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74933,"byte_end":74943,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74948,"byte_end":74951,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74956,"byte_end":75013,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75145,"byte_end":75154,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75087,"byte_end":75133,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75495,"byte_end":75506,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75296,"byte_end":75330,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75335,"byte_end":75338,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75343,"byte_end":75416,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75421,"byte_end":75483,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75811,"byte_end":75820,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75611,"byte_end":75646,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75651,"byte_end":75654,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75659,"byte_end":75732,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75737,"byte_end":75799,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76520,"byte_end":76537,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75971,"byte_end":76040,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76045,"byte_end":76048,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76053,"byte_end":76123,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76128,"byte_end":76201,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76206,"byte_end":76252,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76257,"byte_end":76260,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76265,"byte_end":76340,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76345,"byte_end":76419,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76424,"byte_end":76450,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76455,"byte_end":76458,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76463,"byte_end":76508,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76703,"byte_end":76713,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76590,"byte_end":76637,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76642,"byte_end":76645,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76650,"byte_end":76691,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79225,"byte_end":79238,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79094,"byte_end":79167,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79168,"byte_end":79171,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79172,"byte_end":79213,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79432,"byte_end":79435,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79387,"byte_end":79420,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79599,"byte_end":79604,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79562,"byte_end":79587,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79710,"byte_end":79721,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79656,"byte_end":79698,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79836,"byte_end":79846,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79791,"byte_end":79824,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80580,"byte_end":80592,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79907,"byte_end":79955,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79960,"byte_end":79963,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79968,"byte_end":80009,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80014,"byte_end":80017,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80022,"byte_end":80084,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80089,"byte_end":80149,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80154,"byte_end":80214,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80219,"byte_end":80222,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80227,"byte_end":80302,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80307,"byte_end":80375,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80380,"byte_end":80456,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80461,"byte_end":80529,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80534,"byte_end":80568,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82020,"byte_end":82037,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81736,"byte_end":81788,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81793,"byte_end":81796,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81801,"byte_end":81877,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81882,"byte_end":81916,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81921,"byte_end":81924,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81929,"byte_end":82008,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82497,"byte_end":82508,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82110,"byte_end":82152,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82157,"byte_end":82160,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82165,"byte_end":82238,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82243,"byte_end":82283,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82288,"byte_end":82291,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82296,"byte_end":82366,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82371,"byte_end":82405,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82410,"byte_end":82413,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82418,"byte_end":82485,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83651,"byte_end":83668,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":360}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83451,"byte_end":83508,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83509,"byte_end":83512,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83513,"byte_end":83580,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83581,"byte_end":83639,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83846,"byte_end":83849,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83763,"byte_end":83834,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84430,"byte_end":84433,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84215,"byte_end":84267,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84272,"byte_end":84275,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84280,"byte_end":84352,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84357,"byte_end":84418,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84876,"byte_end":84883,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84635,"byte_end":84687,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84692,"byte_end":84695,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84700,"byte_end":84773,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84778,"byte_end":84848,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84853,"byte_end":84864,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":86723,"byte_end":86730,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":86659,"byte_end":86711,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87016,"byte_end":87020,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":86961,"byte_end":87004,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":393},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":1569},{"krate":0,"index":1578},{"krate":0,"index":1582},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":446},{"krate":0,"index":451},{"krate":0,"index":457}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88133,"byte_end":88168,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1572},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90115,"byte_end":90119,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1569},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1575},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90128,"byte_end":90133,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1569},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1569},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90096,"byte_end":90102,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1575}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88345,"byte_end":88451,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88452,"byte_end":88455,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88456,"byte_end":88546,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88547,"byte_end":88550,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88551,"byte_end":88586,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88587,"byte_end":88590,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88591,"byte_end":88604,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88605,"byte_end":88608,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88609,"byte_end":88646,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88647,"byte_end":88650,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88651,"byte_end":88670,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88671,"byte_end":88713,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88714,"byte_end":88764,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88765,"byte_end":88816,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88817,"byte_end":88835,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88836,"byte_end":88857,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88858,"byte_end":88900,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88901,"byte_end":88934,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88935,"byte_end":88951,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88952,"byte_end":89046,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89047,"byte_end":89057,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89058,"byte_end":89061,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89062,"byte_end":89109,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89110,"byte_end":89115,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89116,"byte_end":89123,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89124,"byte_end":89127,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89328,"byte_end":89331,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89332,"byte_end":89418,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89419,"byte_end":89429,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89430,"byte_end":89433,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89434,"byte_end":89441,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89442,"byte_end":89477,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89478,"byte_end":89520,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89521,"byte_end":89571,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89572,"byte_end":89623,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89624,"byte_end":89627,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89628,"byte_end":89646,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89647,"byte_end":89668,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89669,"byte_end":89711,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89712,"byte_end":89759,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89760,"byte_end":89776,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89777,"byte_end":89826,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89827,"byte_end":89837,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89838,"byte_end":89841,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89842,"byte_end":89875,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89876,"byte_end":89916,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89917,"byte_end":89949,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89950,"byte_end":89955,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89956,"byte_end":89963,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89964,"byte_end":89986,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2442,"byte_end":2455,"line_start":106,"line_end":106,"column_start":12,"column_end":25},"name":"poll_read_buf","qualname":"::util::poll_read_buf","value":"pub fn poll_read_buf<T: AsyncRead,\n                     B: BufMut>(Pin<&mut T>, &mut Context, &mut B)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1213,"byte_end":1298,"line_start":67,"line_end":67,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1303,"byte_end":1306,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ [`BufMut`]: bytes::Buf","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1311,"byte_end":1337,"line_start":69,"line_end":69,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1342,"byte_end":1345,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1350,"byte_end":1363,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1368,"byte_end":1371,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1376,"byte_end":1383,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1388,"byte_end":1421,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1426,"byte_end":1457,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ use tokio::io::Result;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1462,"byte_end":1488,"line_start":76,"line_end":76,"column_start":5,"column_end":31}},{"value":"/ use tokio_util::io::{StreamReader, poll_read_buf};","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1493,"byte_end":1547,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1552,"byte_end":1585,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1590,"byte_end":1612,"line_start":79,"line_end":79,"column_start":5,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1617,"byte_end":1637,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1642,"byte_end":1688,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1693,"byte_end":1696,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1701,"byte_end":1779,"line_start":83,"line_end":83,"column_start":5,"column_end":83}},{"value":"/ // ready.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1784,"byte_end":1797,"line_start":84,"line_end":84,"column_start":5,"column_end":18}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1802,"byte_end":1906,"line_start":85,"line_end":85,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1911,"byte_end":1914,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1919,"byte_end":1953,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/ let mut reads = 0;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1958,"byte_end":1980,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1985,"byte_end":1988,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1993,"byte_end":2003,"line_start":90,"line_end":90,"column_start":5,"column_end":15}},{"value":"/     reads += 1;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2008,"byte_end":2027,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/     let n = poll_fn(|cx| poll_read_buf(Pin::new(&mut read), cx, &mut buf)).await?;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2032,"byte_end":2118,"line_start":92,"line_end":92,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2123,"byte_end":2126,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     if n == 0 {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2131,"byte_end":2150,"line_start":94,"line_end":94,"column_start":5,"column_end":24}},{"value":"/         break;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2155,"byte_end":2173,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2178,"byte_end":2187,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2192,"byte_end":2197,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2202,"byte_end":2205,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2210,"byte_end":2254,"line_start":99,"line_end":99,"column_start":5,"column_end":49}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2259,"byte_end":2283,"line_start":100,"line_end":100,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2288,"byte_end":2328,"line_start":101,"line_end":101,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2333,"byte_end":2345,"line_start":102,"line_end":102,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2350,"byte_end":2357,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2362,"byte_end":2369,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":506},"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4743,"byte_end":4757,"line_start":177,"line_end":177,"column_start":12,"column_end":26},"name":"poll_write_buf","qualname":"::util::poll_write_buf","value":"pub fn poll_write_buf<T: AsyncWrite,\n                      B: Buf>(Pin<&mut T>, &mut Context, &mut B)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Try to write data from an implementer of the [`Buf`] trait to an\n [`AsyncWrite`], advancing the buffer's internal cursor.","sig":null,"attributes":[{"value":"/ Try to write data from an implementer of the [`Buf`] trait to an","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3371,"byte_end":3439,"line_start":136,"line_end":136,"column_start":5,"column_end":73}},{"value":"/ [`AsyncWrite`], advancing the buffer's internal cursor.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3444,"byte_end":3503,"line_start":137,"line_end":137,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3508,"byte_end":3511,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This function will use [vectored writes] when the [`AsyncWrite`] supports","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3516,"byte_end":3593,"line_start":139,"line_end":139,"column_start":5,"column_end":82}},{"value":"/ vectored writes.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3598,"byte_end":3618,"line_start":140,"line_end":140,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3623,"byte_end":3626,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3631,"byte_end":3645,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3650,"byte_end":3653,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ [`File`] implements [`AsyncWrite`] and [`Cursor<&[u8]>`] implements","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3658,"byte_end":3729,"line_start":144,"line_end":144,"column_start":5,"column_end":76}},{"value":"/ [`Buf`]:","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3734,"byte_end":3746,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3751,"byte_end":3754,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3759,"byte_end":3772,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/ use tokio_util::io::poll_write_buf;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3777,"byte_end":3816,"line_start":148,"line_end":148,"column_start":5,"column_end":44}},{"value":"/ use tokio::io;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3821,"byte_end":3839,"line_start":149,"line_end":149,"column_start":5,"column_end":23}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3844,"byte_end":3868,"line_start":150,"line_end":150,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3873,"byte_end":3876,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3881,"byte_end":3900,"line_start":152,"line_end":152,"column_start":5,"column_end":24}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3905,"byte_end":3929,"line_start":153,"line_end":153,"column_start":5,"column_end":29}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3934,"byte_end":3956,"line_start":154,"line_end":154,"column_start":5,"column_end":27}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3961,"byte_end":3994,"line_start":155,"line_end":155,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3999,"byte_end":4002,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4007,"byte_end":4025,"line_start":157,"line_end":157,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4030,"byte_end":4069,"line_start":158,"line_end":158,"column_start":5,"column_end":44}},{"value":"/     let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4074,"byte_end":4128,"line_start":159,"line_end":159,"column_start":5,"column_end":59}},{"value":"/     let mut buf = Cursor::new(b\"data to write\");","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4133,"byte_end":4185,"line_start":160,"line_end":160,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4190,"byte_end":4193,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/     // Loop until the entire contents of the buffer are written to","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4198,"byte_end":4268,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/     // the file.","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4273,"byte_end":4293,"line_start":163,"line_end":163,"column_start":5,"column_end":25}},{"value":"/     while buf.has_remaining() {","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4298,"byte_end":4333,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/         poll_fn(|cx| poll_write_buf(Pin::new(&mut file), cx, &mut buf)).await?;","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4338,"byte_end":4421,"line_start":165,"line_end":165,"column_start":5,"column_end":88}},{"value":"/     }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4426,"byte_end":4435,"line_start":166,"line_end":166,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4440,"byte_end":4443,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4448,"byte_end":4462,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4467,"byte_end":4472,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4477,"byte_end":4484,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4489,"byte_end":4492,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4497,"byte_end":4520,"line_start":172,"line_end":172,"column_start":5,"column_end":28}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4525,"byte_end":4566,"line_start":173,"line_end":173,"column_start":5,"column_end":46}},{"value":"/ [`File`]: tokio::fs::File","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4571,"byte_end":4600,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/ [vectored writes]: tokio::io::AsyncWrite::poll_write_vectored","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4605,"byte_end":4670,"line_start":175,"line_end":175,"column_start":5,"column_end":70}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114679,"byte_end":15114689,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114840,"byte_end":15114850,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15115177,"byte_end":15115187,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15125417,"byte_end":15125426,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15125658,"byte_end":15125668,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15125819,"byte_end":15125828,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15126183,"byte_end":15126193,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15126439,"byte_end":15126447,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15126544,"byte_end":15126552,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15126663,"byte_end":15126671,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15126771,"byte_end":15126779,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15126889,"byte_end":15126899,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15135186,"byte_end":15135196,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15138032,"byte_end":15138038,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15141894,"byte_end":15141900,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15147215,"byte_end":15147221,"line_start":254,"line_end":254,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15147537,"byte_end":15147543,"line_start":267,"line_end":267,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15148258,"byte_end":15148264,"line_start":292,"line_end":292,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15149304,"byte_end":15149315,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15150242,"byte_end":15150252,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15151181,"byte_end":15151191,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15153288,"byte_end":15153298,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15153611,"byte_end":15153621,"line_start":136,"line_end":136,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15154347,"byte_end":15154357,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15155336,"byte_end":15155347,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15155703,"byte_end":15155714,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15157823,"byte_end":15157834,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15158598,"byte_end":15158609,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15158850,"byte_end":15158861,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15173876,"byte_end":15173896,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15177230,"byte_end":15177250,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15178136,"byte_end":15178156,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15179497,"byte_end":15179517,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15179610,"byte_end":15179617,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15189216,"byte_end":15189223,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15189349,"byte_end":15189374,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15189532,"byte_end":15189557,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15189692,"byte_end":15189717,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15190786,"byte_end":15190796,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15193338,"byte_end":15193348,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15196724,"byte_end":15196734,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15197057,"byte_end":15197067,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15197374,"byte_end":15197389,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15197671,"byte_end":15197686,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15197803,"byte_end":15197818,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15200144,"byte_end":15200161,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15202810,"byte_end":15202827,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15206119,"byte_end":15206136,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15206500,"byte_end":15206517,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15206935,"byte_end":15206957,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15207286,"byte_end":15207308,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15207439,"byte_end":15207461,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209556,"byte_end":15209565,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15211505,"byte_end":15211517,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15212404,"byte_end":15212416,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15215296,"byte_end":15215308,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1450},{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15216179,"byte_end":15216191,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15217080,"byte_end":15217092,"line_start":126,"line_end":126,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15217853,"byte_end":15217865,"line_start":154,"line_end":154,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1468},{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40876,"byte_end":40885,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41245,"byte_end":41254,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9125,"byte_end":9142,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9167,"byte_end":9184,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9918,"byte_end":9943,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10017,"byte_end":10034,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10259,"byte_end":10276,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10682,"byte_end":10699,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11669,"byte_end":11686,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11776,"byte_end":11793,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17905,"byte_end":17930,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":18102,"byte_end":18127,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":19562,"byte_end":19587,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":20775,"byte_end":20789,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21123,"byte_end":21140,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21740,"byte_end":21757,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":22615,"byte_end":22628,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":23813,"byte_end":23835,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42135,"byte_end":42143,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42393,"byte_end":42401,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42506,"byte_end":42514,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42823,"byte_end":42833,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72066,"byte_end":72076,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76937,"byte_end":76947,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":77351,"byte_end":77361,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79367,"byte_end":79380,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82592,"byte_end":82605,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82819,"byte_end":82832,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82950,"byte_end":82963,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":83175,"byte_end":83188,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83736,"byte_end":83753,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87127,"byte_end":87144,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87434,"byte_end":87451,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87669,"byte_end":87686,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87782,"byte_end":87799,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87824,"byte_end":87841,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87985,"byte_end":88002,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90739,"byte_end":90745,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90988,"byte_end":90994,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91267,"byte_end":91273,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91601,"byte_end":91607,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91961,"byte_end":91967,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":92519,"byte_end":92525,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":707,"byte_end":712,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":512}},{"kind":"Mod","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15113091,"byte_end":15113107,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":955}},{"kind":"Mod","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":807,"byte_end":809,"line_start":41,"line_end":41,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":1332}},{"kind":"Mod","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":889,"byte_end":893,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":904,"byte_end":910,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":393}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114679,"byte_end":15114689,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15114840,"byte_end":15114850,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1192},"to":{"krate":0,"index":562}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15115177,"byte_end":15115187,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1192},"to":{"krate":0,"index":579}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15125417,"byte_end":15125426,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15125658,"byte_end":15125668,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":640},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15125819,"byte_end":15125828,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15126183,"byte_end":15126193,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":640},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15126439,"byte_end":15126447,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":2603}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15126544,"byte_end":15126552,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":2606}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15126663,"byte_end":15126671,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":2603}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15126771,"byte_end":15126779,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":2606}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15126889,"byte_end":15126899,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1811},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15135186,"byte_end":15135196,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1811},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15138032,"byte_end":15138038,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15141894,"byte_end":15141900,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15147215,"byte_end":15147221,"line_start":254,"line_end":254,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1761},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15147537,"byte_end":15147543,"line_start":267,"line_end":267,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1761},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15148258,"byte_end":15148264,"line_start":292,"line_end":292,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1761},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15149304,"byte_end":15149315,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15150242,"byte_end":15150252,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15151181,"byte_end":15151191,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15153288,"byte_end":15153298,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1720},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15153611,"byte_end":15153621,"line_start":136,"line_end":136,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1720},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15154347,"byte_end":15154357,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1720},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15155336,"byte_end":15155347,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15155703,"byte_end":15155714,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15157823,"byte_end":15157834,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1679},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15158598,"byte_end":15158609,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1679},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15158850,"byte_end":15158861,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1679},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15173876,"byte_end":15173896,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15177230,"byte_end":15177250,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1252},"to":{"krate":0,"index":562}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15178136,"byte_end":15178156,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1252},"to":{"krate":0,"index":579}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15179497,"byte_end":15179517,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15179610,"byte_end":15179617,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15189216,"byte_end":15189223,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1240},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15189349,"byte_end":15189374,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15189532,"byte_end":15189557,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15189692,"byte_end":15189717,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1009},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15190786,"byte_end":15190796,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15193338,"byte_end":15193348,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1270},"to":{"krate":0,"index":562}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15196724,"byte_end":15196734,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1270},"to":{"krate":0,"index":579}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15197057,"byte_end":15197067,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1270},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15197374,"byte_end":15197389,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1292},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15197671,"byte_end":15197686,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1292},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15197803,"byte_end":15197818,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1292},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15200144,"byte_end":15200161,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15202810,"byte_end":15202827,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1300},"to":{"krate":0,"index":562}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15206119,"byte_end":15206136,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1300},"to":{"krate":0,"index":579}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15206500,"byte_end":15206517,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15206935,"byte_end":15206957,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1324},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15207286,"byte_end":15207308,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1324},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15207439,"byte_end":15207461,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1324},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15209556,"byte_end":15209565,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15211505,"byte_end":15211517,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15212404,"byte_end":15212416,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1640},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15215296,"byte_end":15215308,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15216179,"byte_end":15216191,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15217080,"byte_end":15217092,"line_start":126,"line_end":126,"column_start":29,"column_end":41},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1593},"to":{"krate":22,"index":227}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15217853,"byte_end":15217865,"line_start":154,"line_end":154,"column_start":32,"column_end":44},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1593},"to":{"krate":22,"index":185}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40876,"byte_end":40885,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41245,"byte_end":41254,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1486},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9125,"byte_end":9142,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9167,"byte_end":9184,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9918,"byte_end":9943,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10017,"byte_end":10034,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10259,"byte_end":10276,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10682,"byte_end":10699,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11669,"byte_end":11686,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11776,"byte_end":11793,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17905,"byte_end":17930,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":18102,"byte_end":18127,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":19562,"byte_end":19587,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":20775,"byte_end":20789,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21123,"byte_end":21140,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21740,"byte_end":21757,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":22615,"byte_end":22628,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":23813,"byte_end":23835,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42135,"byte_end":42143,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42393,"byte_end":42401,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1545},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42506,"byte_end":42514,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1545},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42823,"byte_end":42833,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72066,"byte_end":72076,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76937,"byte_end":76947,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1561},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":77351,"byte_end":77361,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1561},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79367,"byte_end":79380,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82592,"byte_end":82605,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":301},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82819,"byte_end":82832,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82950,"byte_end":82963,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":83175,"byte_end":83188,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83736,"byte_end":83753,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87127,"byte_end":87144,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87434,"byte_end":87451,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87669,"byte_end":87686,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87782,"byte_end":87799,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87824,"byte_end":87841,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87985,"byte_end":88002,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90739,"byte_end":90745,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1569},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90988,"byte_end":90994,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1569},"to":{"krate":22,"index":227}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91267,"byte_end":91273,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1569},"to":{"krate":22,"index":185}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91601,"byte_end":91607,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1569},"to":{"krate":22,"index":266}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91961,"byte_end":91967,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1569},"to":{"krate":22,"index":306}},{"span":{"file_name":"/home/iblis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":92519,"byte_end":92525,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1569},"to":{"krate":20,"index":96}}]}